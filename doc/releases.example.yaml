# releases.yaml file example
# This is a reference of how you can define repositories and suites.

# Targets are device-distro combinations to publish packages for.
# They may have different arches and different base distributions.
# You can define different sets of packages for different targets.
#
# Each target will have its own prefix when published, e.g.
# wb6/stretch target on s3:releases.wirenboard.com will have path
#
# deb http://releases.wirenboard.com/wb6/stretch
targets:
    wb6/stretch:
        arch: armhf
        distro: stretch

    wb5/stretch:
        arch: armel
        distro: stretch

        # this flag is for CI to skip it while performing staging auto-tests
        no_auto_tests: y

    # target to publish pool once if necessary
    all:
        arch: [armel, armhf]
        distro: stretch
        no_auto_tests: y

# Releases are manually defined snapshots with fixed versions of packages.
# Each release is defined for a set of targets.
releases:
    # Old release example.
    release-2103:

        # this section is for common packages list. x- prefix tells the repo-tool
        # that it is not a real target but an extension
        x-common: &2103-common
            wb-suite: '0.1.2103'
            wb-rules: '2.1.3'
            wb-mqtt-serial: '1.4.2-wb1'

        # this is a target-specific definition. It copies common packages list and
        # may also include some target-specific packages
        wb6/stretch:
            <<: *2103-common

        # older target which doesn't support newer versions of some packages
        wb5/stretch:
            <<: *2103-packages
            wb-rules: '1.7.2'  # override wb-rules version to older one

        # firmwares section defines devices and their FW versions
        firmwares:
            wb-map: '2.2.8'
            wb-mr: '1.15.2'


    # Current release example.
    # This is a transitional release example, where
    # different package versions (and packages) can be
    # in different distros
    release-2106:

        x-common: &2106-common
            wb-suite: '0.1.2106'
            wb-rules: '2.2.1'
            wb-mqtt-serial: '1.8'

        wb6/buster:
            <<: *2106-common
            libfoo1: '1.0.2'

        firmwares:
            wb-map: '2.3.1'
            wb-mr: '2.0.2'
            wb-mai: '1.1.0'

# Suites are aliases for snapshots (both manual and auto).
# Suites are grouped by distros, so we can track each distro's state.
# Releases are also published, of course.
#
# Snapshots with '@' prefix are references to auto-releases which
# exist in Aptly as snapshots.
#
# Suites are grouped by targets which are described above.
suites:
    wb6/stretch:
        stable: release-2106
        oldstable: release-2103

        # testing is something special.
        #
        # When it is not freezed, it points to unstable
        # so users can check out the latest packages which passed minimal tests.
        #
        # Before publishing a new release, use testing to check everything in
        # a new release candidate by setting this suite pointing to RC like this:
        # testing: release-2106
        testing: '@wb6_stretch.unstable.latest'

        # @unstable.latest is an auto-release which contains latest versions
        # of packages and passes minimal tests (e.g. dependencies presence).
        # Bleeding edge is available as '@staging.latest' but it may be broken
        unstable: '@wb6_stretch.unstable.latest'

    wb5/stretch:
        stable: release-2106
        oldstable: release-2103
        unstable: release-2106  # in case when older targets are not compatible with latest packages
        testing: null  # no active testing here

    all:
        # @pool.latest is the auto-release which contains all versions of all
        # published packages at the same time. Pool is distro-independent and
        # is published for all distros available
        pool: '@pool.latest'

